@model Recyclable.Models.RecyclableItem

<h2>Create Recyclable Item</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.RecyclableTypeId, "Recyclable Type", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.RecyclableTypeId, (IEnumerable<SelectListItem>)ViewBag.RecyclableTypeId, new { @class = "form-control", id = "RecyclableTypeId" })
                @Html.ValidationMessageFor(model => model.RecyclableTypeId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ItemDescription, "Description", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ItemDescription, new { htmlAttributes = new { @class = "form-control", id = "ItemDescription" } })
                @Html.ValidationMessageFor(model => model.ItemDescription, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Weight, "Weight", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Weight, new { htmlAttributes = new { @class = "form-control", id = "Weight" } })
                @Html.ValidationMessageFor(model => model.Weight, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ComputedRate, "Computed Rate", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ComputedRate, new { htmlAttributes = new { @class = "form-control", id = "ComputedRate", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.ComputedRate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-warning" />
                <input type="button" value="Reset" class="btn btn-default" onclick="resetForm()" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        function resetForm() {
            $('#RecyclableTypeId, #ItemDescription, #Weight, #ComputedRate').val('');
        }

        function updateComputedRate() {
            var weight = parseFloat($('#Weight').val().replace(',', '.'));
            var recyclableTypeId = $('#RecyclableTypeId').val();

            if (isNaN(weight) || weight <= 0) {
                return $('#ComputedRate').val('');
            }

            if (recyclableTypeId) {
                $.get('/RecyclableItems/GetRecyclableTypeRate', { recyclableTypeId }, function (response) {
                    if (response.success && !isNaN(response.rate)) {
                        var computedRate = (response.rate * weight).toFixed(2);

                        if (weight < response.minKg || weight > response.maxKg) {
                            alert(`The weight must be between ${response.minKg} kg and ${response.maxKg} kg.`);
                            return $('#ComputedRate').val('');
                        }
                        $('#ComputedRate').val(computedRate);
                    } else {
                        $('#ComputedRate').val('');
                    }
                }).fail(function () {
                    $('#ComputedRate').val('');
                });
            } else {
                $('#ComputedRate').val('');
            }
        }

        $(document).ready(function () {
            $('#Weight').on('keyup', function () {
                updateComputedRate();
            });

            $('#RecyclableTypeId').on('change', function () {
                updateComputedRate();
            });
            $(document).on('click', '.delete-link', function (e) {
                e.preventDefault();

                var id = $(this).data("id");
                var row = $("#row-" + id);

                if (confirm("Are you sure you want to delete this item?")) {
                    $.ajax({
                        url: '/RecyclableItems/Delete',
                        type: 'POST',
                        data: { id: id },
                        success: function (result) {
                            if (result.success) {
                                row.fadeOut(function () {
                                    $(this).remove();
                                });
                            } else {
                                alert("Error: " + result.message);
                            }
                        },
                        error: function () {
                            alert("Error deleting the item.");
                        }
                    });
                }
            });
        });
    </script>
}
